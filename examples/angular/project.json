{
  "name": "angular",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "projectType": "application",
  "sourceRoot": "examples/angular/src",
  "prefix": "near-wallet-selector",
  "targets": {
    "build": {
      "executor": "@angular-devkit/build-angular:browser",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/examples/angular",
        "index": "examples/angular/src/index.html",
        "baseHref": "/wallet-selector/",
        "main": "examples/angular/src/main.ts",
        "polyfills": "examples/angular/src/polyfills.ts",
        "tsConfig": "examples/angular/tsconfig.app.json",
        "inlineStyleLanguage": "scss",
        "assets": [
          "examples/angular/src/favicon.ico",
          "examples/angular/src/assets",
          {
            "glob": "**/*",
            "input": "packages/my-near-wallet/assets/",
            "output": "assets/"
          },
          {
            "glob": "**/*",
            "input": "packages/sender/assets/",
            "output": "assets/"
          },
          {
            "glob": "**/*",
            "input": "packages/xdefi/assets/",
            "output": "assets/"
          },
          {
            "glob": "**/*",
            "input": "packages/nightly/assets/",
            "output": "assets/"
          },
          {
            "glob": "**/*",
            "input": "packages/ledger/assets/",
            "output": "assets/"
          },
          {
            "glob": "**/*",
            "input": "packages/math-wallet/assets/",
            "output": "assets/"
          },
          {
            "glob": "**/*",
            "input": "packages/wallet-connect/assets/",
            "output": "assets/"
          },
          {
            "glob": "**/*",
            "input": "packages/meteor-wallet/assets/",
            "output": "assets/"
          },
          {
            "glob": "**/*",
            "input": "packages/welldone-wallet/assets/",
            "output": "assets/"
          },
          {
            "glob": "**/*",
            "input": "packages/coin98-wallet/assets/",
            "output": "assets/"
          },
          {
            "glob": "**/*",
            "input": "packages/here-wallet/assets/",
            "output": "assets/"
          },
          {
            "glob": "**/*",
            "input": "packages/hot-wallet/assets/",
            "output": "assets/"
          },
          {
            "glob": "**/*",
            "input": "packages/narwallets/assets/",
            "output": "assets/"
          },
          {
            "glob": "**/*",
            "input": "packages/near-snap/assets/",
            "output": "assets/"
          },
          {
            "glob": "**/*",
            "input": "packages/ramper-wallet/assets/",
            "output": "assets/"
          },
          {
            "glob": "**/*",
            "input": "packages/unity-wallet/assets/",
            "output": "assets/"
          },
          {
            "glob": "**/*",
            "input": "packages/near-mobile-wallet/assets/",
            "output": "assets/"
          },
          {
            "glob": "**/*",
            "input": "packages/okx-wallet/assets/",
            "output": "assets/"
          },
          {
            "glob": "**/*",
            "input": "packages/ethereum-wallets/assets/",
            "output": "assets/"
          }
        ],
        "styles": ["examples/angular/src/styles.scss"],
        "scripts": []
      },
      "configurations": {
        "production": {
          "buildOptimizer": false,
          "budgets": [
            {
              "type": "initial",
              "maximumWarning": "500kb",
              "maximumError": "6mb"
            },
            {
              "type": "anyComponentStyle",
              "maximumWarning": "2kb",
              "maximumError": "4kb"
            }
          ],
          "fileReplacements": [
            {
              "replace": "examples/angular/src/environments/environment.ts",
              "with": "examples/angular/src/environments/environment.prod.ts"
            }
          ],
          "outputHashing": "all"
        },
        "development": {
          "buildOptimizer": false,
          "optimization": false,
          "vendorChunk": true,
          "extractLicenses": false,
          "sourceMap": true,
          "namedChunks": true
        }
      },
      "defaultConfiguration": "production"
    },
    "serve": {
      "executor": "@angular-devkit/build-angular:dev-server",
      "configurations": {
        "production": {
          "browserTarget": "angular:build:production"
        },
        "development": {
          "browserTarget": "angular:build:development"
        }
      },
      "defaultConfiguration": "development"
    },
    "extract-i18n": {
      "executor": "@angular-devkit/build-angular:extract-i18n",
      "options": {
        "browserTarget": "angular:build"
      }
    },
    "lint": {
      "executor": "@nx/linter:eslint",
      "options": {
        "lintFilePatterns": [
          "examples/angular/src/**/*.ts",
          "examples/angular/src/**/*.html"
        ]
      }
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/examples/angular"],
      "options": {
        "jestConfig": "examples/angular/jest.config.ts",
        "passWithNoTests": true
      }
    },
    "deploy": {
      "executor": "nx:run-script",
      "options": {
        "script": "gh-pages -d ./dist/examples/angular"
      }
    }
  },
  "tags": []
}
