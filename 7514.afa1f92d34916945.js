"use strict";(self.webpackChunkangular=self.webpackChunkangular||[]).push([[7514],{37514:(U,g,e)=>{e.r(g),e.d(g,{ccipRequest:()=>G,offchainLookup:()=>j,offchainLookupAbiItem:()=>E,offchainLookupSignature:()=>D});var L=e(49671),M=e(16487),R=e(30038),l=e(1141),v=e(79767);class S extends l.G{constructor({callbackSelector:s,cause:t,data:c,extraData:i,sender:u,urls:n}){super(t.shortMessage||"An error occurred while fetching for an offchain result.",{cause:t,metaMessages:[...t.metaMessages||[],t.metaMessages?.length?"":[],"Offchain Gateway Call:",n&&["  Gateway URL(s):",...n.map(d=>`    ${(0,v.G)(d)}`)],`  Sender: ${u}`,`  Data: ${c}`,`  Callback selector: ${s}`,`  Extra data: ${i}`].flat(),name:"OffchainLookupError"})}}class $ extends l.G{constructor({result:s,url:t}){super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:[`Gateway URL: ${(0,v.G)(t)}`,`Response: ${(0,R.P)(s)}`],name:"OffchainLookupResponseMalformedError"})}}class w extends l.G{constructor({sender:s,to:t}){super("Reverted sender address does not match target contract address (`to`).",{metaMessages:[`Contract address: ${t}`,`OffchainLookup sender address: ${s}`],name:"OffchainLookupSenderMismatchError"})}}var O=e(23979),C=e(41936),T=e(62910),b=e(9007),A=e(80770),P=e(37812),x=e(62277);const D="0x556f1830",E={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]};function j(o,s){return p.apply(this,arguments)}function p(){return(p=(0,L.Z)(function*(o,{blockNumber:s,blockTag:t,data:c,to:i}){const{args:u}=(0,C.p)({data:c,abi:[E]}),[n,d,f,a,r]=u,{ccipRead:y}=o,k=y&&"function"==typeof y?.request?y.request:G;try{if(!(0,b.E)(i,n))throw new w({sender:n,to:i});const m=d.includes(x.M)?yield(0,x.w)({data:f,ccipRequest:k}):yield k({data:f,sender:n,urls:d}),{data:I}=yield(0,M.R)(o,{blockNumber:s,blockTag:t,data:(0,A.zo)([a,(0,T.E)([{type:"bytes"},{type:"bytes"}],[m,r])]),to:i});return I}catch(m){throw new S({callbackSelector:a,cause:m,data:c,extraData:r,sender:n,urls:d})}})).apply(this,arguments)}function G(o){return h.apply(this,arguments)}function h(){return(h=(0,L.Z)(function*({data:o,sender:s,urls:t}){let c=new Error("An unknown error occurred.");for(let i=0;i<t.length;i++){const u=t[i],n=u.includes("{data}")?"GET":"POST",d="POST"===n?{data:o,sender:s}:void 0,f="POST"===n?{"Content-Type":"application/json"}:{};try{const a=yield fetch(u.replace("{sender}",s.toLowerCase()).replace("{data}",o),{body:JSON.stringify(d),headers:f,method:n});let r;if(r=a.headers.get("Content-Type")?.startsWith("application/json")?(yield a.json()).data:yield a.text(),!a.ok){c=new O.Gg({body:d,details:r?.error?(0,R.P)(r.error):a.statusText,headers:a.headers,status:a.status,url:u});continue}if(!(0,P.v)(r)){c=new $({result:r,url:u});continue}return r}catch(a){c=new O.Gg({body:d,details:a.message,url:u})}}throw c})).apply(this,arguments)}}}]);